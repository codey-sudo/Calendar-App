:root {
  --hue: 190deg;
  --sat: 50%;
  --blur: 0px;
}

#app div {
  --hue2: calc(var(--hue) + 60deg);
  --sat2: calc(var(--sat) + 10%);
  --clr: hsl(var(--hue) var(--sat) 90%);
  --clr2: hsl(var(--hue2) var(--sat2) 85%);
  --text: hsla(var(--hue), 70%, 10%, 0.9);
  --gradoffset: 45%;
  --gradgap: 30%;
}

button {
  font-size: 3vw;
  color: var(--text);
  font-weight: 500;
  background-color: var(--clr);
  background-image: linear-gradient(
    180deg,
    var(--clr2) var(--gradgap),
    transparent calc(100% - var(--gradgap))
  );
  background-repeat: no-repeat;
  background-position: center var(--gradoffset);
  background-size: 100% 200%;
  padding: 1.1em 1.5em;
  border-radius: 2em;
  border: none;
  box-shadow: 0 -0.5em 0.5em transparent, 0 0.5em 0.5em transparent,
    0 0.25em 0.3em -0.2em hsla(var(--hue), var(--sat), 50%, 0.46),
    0 0.25em 0.75em hsla(var(--hue), calc(var(--sat) - 10%), 40%, 0.3);
  position: relative;
  transition: all 0.5s ease;
  outline: none;
}
@media screen and (min-width: 660px) {
  button {
    font-size: 0.7vw;
    font-weight: 600;
  }
}
button::before,
button::after {
  content: "";
  inset: 0;
  position: absolute;
  border-radius: 5em;
}
button::before {
  background-image: radial-gradient(
      ellipse,
      hsla(var(--hue), 100%, 90%, 0.8) 20%,
      transparent 50%,
      transparent 200%
    ),
    linear-gradient(
      90deg,
      hsl(0, 0%, 25%) -10%,
      transparent 30%,
      transparent 70%,
      hsl(0, 0%, 25%) 110%
    );
  box-shadow: inset 0 0.25em 0.75em hsla(0, 0%, 0%, 0.8),
    inset 0 -0.05em 0.2em rgba(255, 255, 255, 0.4),
    inset 0 -1px 3px hsla(var(--hue), 80%, 50%, 0.75);
  background-blend-mode: overlay;
  background-repeat: no-repeat;
  background-size: 200% 80%, cover;
  background-position: center 220%;
  mix-blend-mode: overlay;
  filter: blur(calc(var(--blur) * 0.5));
}
button::after {
  background: linear-gradient(
    180deg,
    hsla(var(--hue2), 100%, 90%, 0.9),
    hsla(var(--hue2), calc(var(--sat2) * 0.7), 50%, 0.75) 40%,
    transparent 80%
  );
  top: 0.075em;
  left: 0.75em;
  right: 0.75em;
  bottom: 1.4em;
  filter: blur(var(--blur));
  mix-blend-mode: screen;
}
button:hover,
button:active,
button:focus {
  outline: none;
  box-shadow: 0 -0.2em 1em hsla(var(--hue2), 70%, 80%, 0.3),
    0 0.5em 1.5em hsla(var(--hue), 70%, 80%, 0.5),
    0 0.25em 0.3em -0.2em hsl(var(--hue), 90%, 70%),
    0 0.25em 0.5em hsla(var(--hue), 20%, 30%, 0.2),
    inset 0 -2px 2px rgba(255, 255, 255, 0.2);
  background-position: center calc(var(--gradoffset) - 0.75em);
}

button {
  position: relative;
}

.static button .spinner {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translateY(0.75em) translateX(-50%);
  opacity: 0;
  margin: 0;
  font-size: 2em;
  mix-blend-mode: overlay;
}

.static button span,
.static button svg,
.static button .spinner {
  transition: all 0.33s ease;
}

.static button:active span,
.static button:active svg:not(.spinner),
.static button:focus span,
.static button:focus svg:not(.spinner) {
  transform: translateY(-1em);
  opacity: 0;
  filter: blur(5px);
}
.static button:active .spinner,
.static button:focus .spinner {
  transform: translateY(-0.5em) translateX(-50%);
  opacity: 1;
}

button {
  display: flex;
}

svg {
  height: 1em;
  width: auto;
  margin-left: 0.33em;
}

button svg,
button span {
  display: inline-flex;
  align-content: center;
  align-self: center;
}

@media screen and (min-width: 660px) {
  #app {
    grid-template-columns: auto auto;
    grid-template-rows: min-content auto max-content;
  }
}

/*# sourceMappingURL=buttons.css.map */
